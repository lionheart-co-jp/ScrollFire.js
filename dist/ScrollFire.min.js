"use strict";var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(t){for(var r,e=1,n=arguments.length;e<n;e++)for(var o in r=arguments[e])Object.prototype.hasOwnProperty.call(r,o)&&(t[o]=r[o]);return t}).apply(this,arguments)};!function(){function i(t){return void 0!==t.each}function n(t){return void 0!==t.length}var s={root:null,rootMargin:"-50% 0px",threshold:0};function t(){this.trigger=[],this._flag=!1}t.prototype.start=function(){return this._flag||(this._flag=!0,this.observe()),this},t.prototype.stop=function(){return this._flag&&(this._flag=!1,this.unobserve()),this},t.prototype.addTrigger=function(t,r,e,n){void 0===n&&(n={});var o=i(t),n=__assign(__assign({},s),n),n=new IntersectionObserver(function(t){t.map(function(t){console.log(t),t.isIntersecting?r&&r(o?jQuery(t.target):t.target):!t.isIntersecting&&0<t.boundingClientRect.top&&e&&e(o?jQuery(t.target):t.target)})},n);return this.trigger.push({target:t,observer:n}),this},t.prototype.observe=function(){this.trigger.map(function(t){var r=t.target,e=t.observer;i(r)?r.each(function(){e.observe(this)}):n(r)?r.forEach(function(t){e.observe(t)}):e.observe(r)})},t.prototype.unobserve=function(){this.trigger.map(function(t){var r=t.target,e=t.observer;i(r)?r.each(function(){e.unobserve(this)}):n(r)?r.forEach(function(t){e.unobserve(t)}):e.unobserve(r)})},window.ScrollFire=t}();